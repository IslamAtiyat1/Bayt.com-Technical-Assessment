{"version":3,"sources":["Task2.js"],"names":["contains","obj","targetValue","key","_typeof","Array","isArray","nestedObject","data","stuff","thing","moreStuff","isContained","console","log"],"mappings":"8PAsBA,SAASA,SAASC,EAAKC,GACrB,IAAK,IAAMC,KAAOF,EAAK,CACrB,GAAIA,EAAIE,KAASD,EACf,OAAO,EAGT,GAAwB,WAApBE,QAAOH,EAAIE,MAAsBE,MAAMC,QAAQL,EAAIE,KAAnDH,SAAUC,EAAAE,GAAVD,GACF,OAAIF,EAIP,OAAA,EAKH,IAAIO,aAAe,CACjBC,KAAM,CADJD,KAAAA,CACEE,MAAE,CACAC,MAAE,CACJD,UAAO,CACLC,YAAO,GACLC,UAAW,aAWjBT,YAAc,GAEdU,YAAcZ,SAASO,aAAcL,aAEzCW,QAAQC,IAAIF","file":"Task2.min.js","sourcesContent":["// 2. Write a function called contains that searches\r\n// for a value in a nested object.It returns true if the object contains that value.\r\n// Sample Object:\r\n\r\n// var nestedObject = {\r\n//   data: {\r\n//     info: {\r\n//       stuff: {\r\n//         thing: {\r\n//           moreStuff: {\r\n//             magicNumber: 44,\r\n\r\n//             something: \"foo2\",\r\n//           },\r\n//         },\r\n//       },\r\n//     },\r\n//   },\r\n// };\r\n\r\n// Solution:\r\n\r\nfunction contains(obj, targetValue) {\r\n  for (const key in obj) {\r\n    if (obj[key] === targetValue) {\r\n      return true;\r\n    }\r\n    // If the property's value is an object, recursively search inside it\r\n    if (typeof obj[key] === \"object\" && !Array.isArray(obj[key])) {\r\n      if (contains(obj[key], targetValue)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n// Sample Object\r\nvar nestedObject = {\r\n  data: {\r\n    info: {\r\n      stuff: {\r\n        thing: {\r\n          moreStuff: {\r\n            magicNumber: 44,\r\n            something: \"foo2\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\n// Value to search for\r\nvar targetValue = 44;\r\n\r\nvar isContained = contains(nestedObject, targetValue);\r\n\r\nconsole.log(isContained); // true,\r\n"]}