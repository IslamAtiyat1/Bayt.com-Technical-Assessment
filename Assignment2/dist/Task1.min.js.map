{"version":3,"sources":["Task1.js"],"names":["all","array","conditionFunction","i","length","isValueLessThanNine","element","array3","result1","array1","result2","array2","console","log","result3"],"mappings":"aAoBM,SAAAA,IAAOC,EAAPC,GACD,IAAA,IAAAC,EAAA,EAAAA,EAAAF,EAAAG,OAAAD,IACF,IAAAD,EAAAD,EAAAE,IAFG,OAAO,EAGX,OAAO,EAKR,SAAAE,oBAAAC,GADC,OAAOA,EAAU,EAKnB,IAAIC,OAAS,CAAC,EAAG,EAAG,EAAG,GAEnBC,OAAO,CAAGR,EAAG,EAACS,EAAAA,GACdC,OAAO,CAAGV,EAAG,EAACW,EAAAA,EAAQN,GAAAA,GAG1BO,QAAYJ,IAAAA,OAAUH,qBAHlBK,QAAUV,IAAIW,OAAQN,qBAI1BO,QAAYF,IAAAA,OAAUL,qBACtBO,QAAQC,IAAIC,SADZF,QAAQC,IAAIH,SACZE,QAAQC,IAAIC","file":"Task1.min.js","sourcesContent":["// 1. Write a function called all which accepts an array and a\r\n//  callback and returns true if every value in the array returns true\r\n//   when passed as a parameter to the callback function.\r\n\r\n// Sample:\r\n\r\n// var allAreLessThanSeven = all([1, 2, 9], function (num) {\r\n//   return num < 7;\r\n// });\r\n\r\n// console.log(allAreLessThanSeven); // false\r\n\r\n// I have provided a solution for the problem you mentioned. However,\r\n// keep in mind that there are multiple ways to solve it, and the solution I\r\n//  provided is just one approach\r\n\r\n// Solution:\r\nfunction all(array, conditionFunction) {\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (!conditionFunction(array[i])) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction isValueLessThanNine(element) {\r\n  return element < 9;\r\n}\r\n\r\nvar array1 = [6, 4, 1, 5];\r\nvar array2 = [1, 1, 6, 9];\r\nvar array3 = [2, 1, 2, 9, 32, 3];\r\n\r\nvar result1 = all(array1, isValueLessThanNine);\r\nvar result2 = all(array2, isValueLessThanNine);\r\nvar result3 = all(array3, isValueLessThanNine);\r\n\r\nconsole.log(result1); // true\r\nconsole.log(result2); // false\r\nconsole.log(result3); // false\r\n"]}