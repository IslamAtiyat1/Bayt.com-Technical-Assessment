{"version":3,"sources":["Task1.js"],"names":["checkCondition","conditionFunction","element","array","every","isValueLessThanTen","array1","array2","array3","result2","result3","console","result1","log"],"mappings":"aAgBqB,SAAAA,eAAaC,EAAkBC,GAA/B,OAAnBC,EAAAC,MAAA,SAAAF,GAAA,OAAAD,EAAAC,KAGF,SAASG,mBAAmBH,GAC1B,OAAOA,EAAU,GAGnB,IAAII,OAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACzBC,OAAS,CAAC,GAAI,EAAG,EAAG,GACpBC,OAAS,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAG1BC,QAAUT,eAAeO,OAAQF,oBACjCK,QAAUV,eAAeQ,OAAQH,oBAErCM,QAAYC,eAAUJ,OAAAH,oBACtBM,QAAQE,IAAIJ,SAAZE,QAAQE,IAAIJ,SACZE,QAAQE,IAAIH","file":"Task1.min.js","sourcesContent":["// 1. Write a function called all which accepts an array and a\r\n//  callback and returns true if every value in the array returns true\r\n//   when passed as a parameter to the callback function.\r\n\r\n// Sample:\r\n\r\n// var allAreLessThanSeven = all([1, 2, 9], function (num) {\r\n//   return num < 7;\r\n// });\r\n\r\n// console.log(allAreLessThanSeven); // false\r\n// I have provided a solution for the problem you mentioned. However,\r\n// keep in mind that there are multiple ways to solve it, and the solution I\r\n//  provided is just one approach\r\n\r\nfunction checkCondition(array, conditionFunction) {\r\n  return array.every((element) => conditionFunction(element));\r\n}\r\n\r\nfunction isValueLessThanTen(element) {\r\n  return element < 10;\r\n}\r\n\r\nvar array1 = [2, 5, 6, 7, 8, 9];\r\nvar array2 = [21, 1, 2, 9];\r\nvar array3 = [2, 1, 24, 8, 2, 9];\r\n\r\nvar result1 = checkCondition(array1, isValueLessThanTen);\r\nvar result2 = checkCondition(array2, isValueLessThanTen);\r\nvar result3 = checkCondition(array3, isValueLessThanTen);\r\n\r\nconsole.log(result1); // true\r\nconsole.log(result2); // true\r\nconsole.log(result3); // false\r\n"]}